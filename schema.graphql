scalar Timestamp

type Advertiser {
  id: ID!
  name: String!
  file: String
}

type Ad {
  id: ID!
  file: String!
}

type Ranking {
  ranking: ID!
  userID: ID!
  avatar: String!
  score: Int!
}

type Query {
  advertisers: [Advertiser!]
  ads: [Ad!]
  "rankingList返回前三名和自身排名"
  rankingList(userID: ID): [Ranking!]
}

"游戏开始，记录用户ID和头像"
input StartGameInput {
  userID: ID!
  avatar: String!
}

"游戏结束，记录用户分数"
input EndGameInput {
  userID: ID!
  score: Int!
}

type Mutation {
  createAdvertiser(name: String!, file: String!): Boolean
  updateAdvertiser(id: ID!, name: String, file: String): Boolean
  deleteAdvertisers(ids: [ID!]!): Boolean
  createAd(file: String!): Boolean
  updateAd(id: ID!, file: String): Boolean
  deleteAds(ids: [ID!]!): Boolean
  startGame(input: StartGameInput!): Boolean
  endGame(input: EndGameInput!): Boolean
}